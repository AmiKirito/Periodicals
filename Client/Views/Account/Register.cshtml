@using Client.ViewModels
@model RegisterViewModel

@{
    ViewBag.Title = "Register";
}

@if (User.Identity.IsAuthenticated)
{
    <h1>You have already registered an account. Please log out from the current one if you want to register a new one.</h1>
}
else
{
    using (Html.BeginForm("Register", "Account", FormMethod.Post))
    {
        <div class="login-wrap">
            <div>
                <div>
                    <span class="login-title">Registration</span>
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { placeholder = "Username", @class = "editor" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "E-mail", @class = "editor" } })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(model => model.Password, new { placeholder = "Password", @class = "editor" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { placeholder = "Password confirmation", @class = "editor" })
                </div>
            </div>
            <div>
                <input type="submit" class="btn btn-dark" value="Register" />
            </div>
            <div class="text-danger">
                @Html.ValidationSummary(true)
                @Html.ValidationMessageFor(model => model.Username, null, new { @class = "text-danger" })<br />
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })<br />
                @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger" })<br />
                @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-danger" })<br />
            </div>
        </div>
    }
}


@using Client.ViewModels
@model PublisherDetailsViewModel

@{
    ViewBag.Title = "Details";
    bool isFirstAuthor = true;
    bool isFirstTopic = true;
}
<div class="row">
    <div class="col">

        <h1>@Model.Publisher.Title</h1>
        <h4>Description:</h4>
        <span>@Model.Publisher.Description</span>
        <h4 class="mt-1">Price: $@Model.Publisher.MonthlySubscriptionPrice/month</h4>
        <h4>Authors:</h4>
        <div class="d-flex align-items-center">
            @foreach (var author in Model.Publisher.Authors)
            {
                if (isFirstAuthor)
                {
                    <span class="btn btn-dark disabled">
                        @author.Name
                    </span>

                    isFirstAuthor = false;
                }
                else
                {
                    <span class="btn btn-dark disabled ml-2">
                        @author.Name
                    </span>
                }
            }
        </div>
        <h3>Topics:</h3>
        <div class="d-flex align-items-center">
            @foreach (var topic in Model.Publisher.Topics)
            {
                if (isFirstTopic)
                {
                    <span class="btn btn-dark disabled">
                        <a class="white text-decoration-none" href="@Url.Action("Index", "Publisher", new { filterTopic = topic.Title })">@topic.Title</a>
                    </span>

                    isFirstTopic = false;
                }
                else
                {
                    <span class="btn btn-dark disabled ml-2">
                        <a class="white text-decoration-none" href="@Url.Action("Index", "Publisher", new { filterTopic = topic.Title })">@topic.Title</a>
                    </span>
                }
            }
        </div>
        <hr />
        @if (User.Identity.IsAuthenticated)
        {
            <div class="d-flex align-items-center pt-3">
                @if (Model.Publisher.Subscriptions.Any(s => s.UserId == Model.UserId))
                {
                    if ((Model.Publisher.Subscriptions.Where(s => s.PublisherId == Model.Publisher.Id && s.UserId == Model.UserId && s.IsRemoved == false && s.IsExpired == false).Any()) &&
                         (Model.Publisher.Subscriptions.Where(s => s.PublisherId == Model.Publisher.Id && s.UserId == Model.UserId).Count() >= 1))
                    {
                        <div>
                            <span class="btn btn-outline-success disabled">Subscribed</span>
                        </div>
                    }
                    else
                    {
                        <a class="btn btn-outline-secondary" href="@Url.Action("New", "Subscription", new { id = Convert.ToInt32(Model.Publisher.Id) })">Subscribe</a>
                    }

                }
                else
                {
                    <a class="btn btn-outline-secondary" href="@Url.Action("New", "Subscription", new { id = Convert.ToInt32(Model.Publisher.Id) })">Subscribe</a>
                }
                @if (!User.IsInRole("CommonUser"))
                {
                    <a class="btn btn-outline-primary ml-2" href="@Url.Action("Edit", "Publisher", new { id = Convert.ToInt32(Model.Publisher.Id) })">Edit</a>
                    <a class="btn btn-outline-danger ml-2" href="@Url.Action("Remove", "Publisher", new { id = Convert.ToInt32(Model.Publisher.Id) })">Remove</a>
                }
            </div>
        }
    </div>
<div class="col text-center mt-3">
    <img height="300" width="300" src="@Model.Publisher.ImagePath" />
</div>
</div>
    


